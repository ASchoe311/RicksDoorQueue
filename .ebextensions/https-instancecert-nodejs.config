###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
####     http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### This configuration file downloads a private key from Amazon S3 and configures nginx to use it
#### to terminate HTTPS connections on port 443. Replace the values in the Parameters section with
#### the URL of the private key in Amazon S3, and the contents of the public certificate. To
#### download the file, your environment's instance profile must have S3ReadOnlyAccess or a similar
#### policy attached. In a single instance environment, also include 
#### https-singleinstance-securitygroup.config to allow traffic to the instance on port 443.
###################################################################################################

Parameters:
  privatekey: 
    Type: String
    Description: "The path to the private key in Amazon S3"
    Default: "https://elasticbeanstalk-us-east-2-482200843518.s3.us-east-2.amazonaws.com/privatekey.pem"
  publiccert:
    Type: String
    Description: "The public certificate"
    Default: |
      -----BEGIN CERTIFICATE-----
      MIIDyTCCArECFHtHEcHlkwKBopaPBHHcUcGRItetMA0GCSqGSIb3DQEBCwUAMIGg
MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTUkxEjAQBgNVBAcMCUFubiBBcmJvcjEY
MBYGA1UECgwPQWRhbSBTY2hvZW5mZWxkMQ0wCwYDVQQLDARUZWFtMRowGAYDVQQD
DBF3d3cuYWRhbXNjaG9lLmNvbTErMCkGCSqGSIb3DQEJARYcYWRhbXJzY2hvZW5m
ZWxkMzExQGdtYWlsLmNvbTAeFw0yMjAxMjQyMzU3NDFaFw0yMzAxMjQyMzU3NDFa
MIGgMQswCQYDVQQGEwJVUzELMAkGA1UECAwCTUkxEjAQBgNVBAcMCUFubiBBcmJv
cjEYMBYGA1UECgwPQWRhbSBTY2hvZW5mZWxkMQ0wCwYDVQQLDARUZWFtMRowGAYD
VQQDDBF3d3cuYWRhbXNjaG9lLmNvbTErMCkGCSqGSIb3DQEJARYcYWRhbXJzY2hv
ZW5mZWxkMzExQGdtYWlsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBALxe5e7GmOLInl3oDV83//eSB2JbpwpcaWEZXtmqogFX2aZH38JPFu/OSXEE
VQj6fPzutW7NzNOWsgAeHamyc7pRNWFKtnsDf7/zffx4WlNjb41MJ4htOsVbigwX
cvwNgNSufesRAC4CEK+oUYVtY0cL7yqN07wUgw2Hn8Sz2K4tkfYfJSXup5MtiRvM
rYath9yMIM8TLDJNbcVnZJHzEMvMZ88TnNn76QoItvMnkg5d3vHGwEsDcfeEaGY3
iQNmCa1MnhJZuDAzAcAvsZvSkQYNyO7kCZY4pb02BBRKeYtYVHPtJYvCgPQbTXXK
PBZcmmQ+f5idVSif0/v6jHpjaGkCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAfp7
hXAH56fXLrrwYvf5OV8WxCE1a9oJ0I9ZHdDxEd6E5y5v4241af64a/mo1h6Yy0fo
59TfCkpxfI+z6DPRAAED+bhs7G8kuODhT4xMHiHxsreM4DP5Rj6bAUmdAFr71iVj
TaNQwPmlm/7divyKbOrxabuaA7MTLZPAzXk7vhTlj10yHMQUU0lJSgBfRo8ro0qn
wTuvHHwvW6ZoqxpOClnw/DV6VSepwlGpSIAz+pnrHKao4UoI8HN5FVuC9OUehe1E
M4Ue4mdOO4d0dO5GV7hPlrhBOyl8OVVT4bwwmrTe59BQlo16aPdl8/A5YD1/mkqr
uRtkX2LTCbLelsbxpA==
      -----END CERTIFICATE-----

##############################################
#### Do not modify values below this line ####
##############################################

files:
  # nginx HTTPS configuration
  /etc/nginx/conf.d/https.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server

      server {
          listen       443;
          server_name  localhost;
          
          ssl                  on;
          ssl_certificate      /etc/pki/tls/certs/server.crt;
          ssl_certificate_key  /etc/pki/tls/certs/server.key;
          
          ssl_session_timeout  5m;
          
          ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
          ssl_prefer_server_ciphers   on;
          
          location / {
              proxy_pass  http://nodejs;
              proxy_set_header   Connection "upgrade";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }
      }

  # Public certificate
  /etc/pki/tls/certs/server.crt:
    mode: "000400"
    owner: root
    group: root
    content: { "Ref": "publiccert"}

  # Private key
  /etc/pki/tls/certs/server.key:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: { "Ref" : "privatekey" }

Resources:
  # Use instance profile to authenticate to S3 bucket that contains the private key
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          roleName: 
            "Fn::GetOptionSetting": 
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"
